---
name: 🪟 Windows
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build (windows)
    runs-on: windows-2022
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - triplet: 'x64-windows'

    steps:
      - name: 🐣 Checkout
        uses: actions/checkout@v4

      - name: 🐩 Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: 🧽 Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: 🐕 Checkout vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          ref: c4467cb686f92671f0172aa8299a77d908175b4e # TODO: can we have a canonical baseline for tests?
          path: vcpkg
          fetch-depth: 1

      - name: 🐾 Bootstrap vcpkg
        shell: bash
        run: |
          PKG_SOURCE_USER=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1)
          ./vcpkg/bootstrap-vcpkg.sh
          NUGET_EXE=$(./vcpkg/vcpkg fetch nuget)
          echo "Downloaded $NUGET_EXE"
          $NUGET_EXE sources add -Name ghpkg -Source "https://nuget.pkg.github.com/$PKG_SOURCE_USER/index.json" -UserName "$PKG_SOURCE_USER" -Password "${{ secrets.GITHUB_TOKEN }}" -StorePasswordInClearText
          $NUGET_EXE setapikey "${{ secrets.GITHUB_TOKEN }}" -Source "https://nuget.pkg.github.com/$PKG_SOURCE_USER/index.json"
          echo "VCPKG_BINARY_SOURCES=clear;nuget,https://nuget.pkg.github.com/$PKG_SOURCE_USER/index.json,readwrite" >> $GITHUB_ENV
          VCPKG_ROOT=$(cygpath -w $(pwd)/vcpkg)
          echo "PATH=$VCPKG_ROOT;$PATH" >> $GITHUB_ENV
          echo "VCPKG_ROOT=$VCPKG_ROOT" >> $GITHUB_ENV


      - name: 🌋 Build
        run: |
          .\vcpkg\vcpkg.exe install --overlay-ports="${{ github.workspace }}/ports" --triplet=${{ matrix.triplet }} --x-buildtrees-root=C:/vcpkg-build py-pyqt6 py-pyyaml py-numpy gdal[python] py-qscintilla py-psycopg2 py-urllib3 py-markupsafe py-requests py-isort py-autopep8 py-flask py-matplotlib

      - name: 📑 Upload logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs-${{ matrix.triplet }}
          path: C:/vcpkg-build/**/*.log
